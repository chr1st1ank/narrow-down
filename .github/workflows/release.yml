
name: release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, i686]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
        architecture: x64
    - uses: messense/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: auto
        command: build
        args: --release -o dist --no-sdist
    - name: Install built wheel
      if: matrix.target == 'x86_64'
      run: |
        rm -rf narrow_down
        pip install narrow_down --find-links dist --force-reinstall
        python -c "import narrow_down"
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
        architecture: x64
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        default: true
    - name: Build wheels
      uses: messense/maturin-action@v1
      with:
        target: x64
        args: --release --out dist --no-sdist
    - name: Install built wheel
      shell: bash
      run: |
        rm -rf narrow_down
        pip install narrow_down --find-links dist --force-reinstall
        python -c "import narrow_down"
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
        architecture: x64
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        default: true
    - name: Build wheels - x86_64
      uses: messense/maturin-action@v1
      with:
        target: x86_64
        args: --release --out dist
    - name: Install built wheel - x86_64
      run: |
        rm -rf narrow_down
        pip install narrow_down --find-links dist --force-reinstall
        python -c "import narrow_down"
    - name: Build wheels - universal2
      uses: messense/maturin-action@v1
      with:
        args: --release --universal2 --out dist --no-sdist
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist

  test-release:
    runs-on: ubuntu-latest
    needs: [ build-macos, build-windows, build-linux ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - name: Publish to Test PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
        with:
          command: upload
          args: --repository-url=https://test.pypi.org/legacy/ --skip-existing *

  release:
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ build-macos, build-windows, build-linux, test-release ]
    steps:
#      - uses: actions/checkout@v2.4.0
#
#      - name: Set up Python 3.7
#        uses: actions/setup-python@v2.3.1
#        with:
#          python-version: 3.7
#
#      - name: Install system deps
#        shell: bash
#        run: |
#          pip install poetry
#          poetry config virtualenvs.in-project true
#
#      - name: Build package
#        run: |
#          poetry build --ansi
#
#      - name: Publish package on PyPI
#        uses: pypa/gh-action-pypi-publish@v1.4.2
#        with:
#          user: __token__
#          password: ${{ secrets.PYPI_TOKEN }}
#
#      - name: Publish package on TestPyPI
#        uses: pypa/gh-action-pypi-publish@v1.4.2
#        with:
#          user: __token__
#          password: ${{ secrets.TEST_PYPI_TOKEN }}
#          repository_url: https://test.pypi.org/legacy/

      - uses: actions/download-artifact@v2
        with:
          name: wheels

      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
  
  github_release:
    needs: release
    name: Create Github Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0

      - name: Get version from tag
        id: tag_name
        shell: bash
        run: |
          echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2.0.0
        with:
          version: ${{ steps.tag_name.outputs.current_version }}
          path: ./CHANGELOG.md

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          draft: false
          prerelease: false
