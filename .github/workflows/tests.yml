name: tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:

jobs:
  linting:
    # Static code analysis. Running on lowest supported Python version to catch use of new syntax.
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0

      - name: Set up Python 3.7
        uses: actions/setup-python@v2.3.1
        with:
          python-version: 3.7

      - name: Linting
        run: |
          pip install pre-commit
          pre-commit run --all-files

  tests:
    # Tests are run on all platform/python combinations for which numpy wheels exist.
    needs: linting
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: ["macos-11"]  #[Ubuntu, MacOS, Windows]
#        python-version: ["3.7", "3.8", "3.9", "3.10"]
        python-version: ["3.7", "3.10"]
        exclude:
          - os: Windows
            python-version: "3.10"
            # No numpy wheels yet
        include:
          - python-version: "3.9"
            os: Ubuntu
            publish-results: true
      fail-fast: false
    steps:
      - uses: actions/checkout@v2.4.0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.3.1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system deps
        shell: bash
        run: |
          pip install nox
          pip install maturin

      - name: Run mypy with nox
        shell: bash
        run: nox --force-color -s mypy-${{ matrix.python-version }}

      - name: Run tests with nox
        shell: bash
        run: nox --force-color -s tests-${{ matrix.python-version }}

      - name: Run safety check
        if: matrix.python-version == '3.10' && matrix.os == 'Ubuntu'
        shell: bash
        run: nox --force-color -s safety

      - name: Upload coverage data
        if: ${{ matrix.publish-results && always() }}
        uses: actions/upload-artifact@v2.3.1
        with:
          name: coverage-data
          path: ".coverage.*"

  coverage:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      
      - name: Set up Python 3.9
        uses: actions/setup-python@v2.3.1
        with:
          python-version: 3.9

      - name: Install system deps
        shell: bash
        run: |
          pip install nox
          pip install maturin

      - name: Download coverage data
        uses: actions/download-artifact@v2.1.0
        with:
          name: coverage-data

      - name: Create coverage report
        shell: bash
        run: |
          nox --force-color --session=coverage -- --fmt xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
