name: tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  precommit:
    # Static code analysis. Running on lowest supported Python version to catch use of new syntax.
    name: Pre-Commit
    runs-on: ubuntu-latest
    steps:            
      - uses: actions/checkout@v3
      
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-linting-${{ hashFiles('**/pyproject.toml', '**/.pre-commit-config.yaml') }}


      - name: Set up Python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Linting
        run: |
          pip install pre-commit
          pre-commit run --all-files

  static-code-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ubuntu-latest-3.8-pip-${{ hashFiles('**/pyproject.toml') }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ubuntu-latest-3.8-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install project
        shell: bash
        run: |
          python3 -m venv ./venv
          source ./venv/bin/activate
          python3 -m pip install --upgrade pip maturin invoke
          maturin develop

      - name: Pylint
        shell: bash
        run: |
          source ./venv/bin/activate
          inv pylint

      - name: Run mypy
        shell: bash
        run: |
          source ./venv/bin/activate
          mypy

  doctests:
    name: Doctest
    runs-on: ubuntu-latest
    services:
      scylladb:
        image: scylladb/scylla:4.5.0
        ports:
          - 9042:9042
        options: --health-cmd "nodetool status |grep UN" --health-interval 5s --health-retries 20
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-doctest-${{ hashFiles('**/pyproject.toml', '**/.pre-commit-config.yaml') }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-doctest-${{ hashFiles('**/Cargo.lock') }}

      - name: Intall pip maturin invoke
        run: |
          python3 -m pip install --upgrade pip maturin invoke

      - name: Install project
        run: |
          pip install -e .[scylladb,docs,dev]

      - name: Run Jupyter notebook tests
        shell: bash
        run: inv doctest

  tests:
    # Tests are run on all platform/python combinations for which numpy wheels exist.
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.7", "3.10"]
        exclude:
          - os: Windows
            python-version: "3.10"
            # No numpy wheels yet
        include:
          - python-version: "3.9"
            os: ubuntu-latest
            pip-cache-path: ~/.cache/pip
            publish-results: true
          - os: ubuntu-latest
            pip-cache-path: ~/.cache/pip
          - os: macos-latest
            pip-cache-path: ~/Library/Caches/pip
          - os: windows-latest
            pip-cache-path: ~\AppData\Local\pip\Cache
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/cache@v3
        with:
          path: ${{ matrix.pip-cache-path }}
          key: ${{ matrix.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/pyproject.toml') }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.os }}-${{ matrix.python-version }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system deps
        shell: bash
        run: pip install nox maturin

      - name: Run tests with nox
        shell: bash
        run: nox --verbose --force-color -s tests-${{ matrix.python-version }}

      - name: Run safety check
        if: matrix.python-version == '3.10' && matrix.os == 'ubuntu-latest'
        shell: bash
        run: nox --force-color -s safety

      - name: Upload coverage data
        if: ${{ matrix.publish-results && always() }}
        uses: actions/upload-artifact@v3
        with:
          name: coverage-data
          path: ".coverage.*"

  coverage:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install system deps
        shell: bash
        run: |
          pip install nox maturin

      - name: Download coverage data
        uses: actions/download-artifact@v3
        with:
          name: coverage-data

      - name: Create coverage report
        shell: bash
        run: |
          nox --force-color --session=coverage -- --fmt xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v3.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  integration_tests:
    name: "Integration test"
    runs-on: "ubuntu-latest"
    services:
      postgres:
        image: scylladb/scylla:4.5.0
        ports:
          - 9042:9042
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ubuntu-latest-3.9-pip-${{ hashFiles('**/pyproject.toml') }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ubuntu-latest-3.9-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install system deps
        shell: bash
        run: pip install nox maturin

      - name: Run tests with nox
        shell: bash
        env:
          TEST_WITH_DB: true
        run: nox --verbose --force-color -s tests-3.9

      - name: Run benchmarks with nox
        shell: bash
        env:
          TEST_WITH_DB: true
        run: nox --verbose --force-color -s benchmarks-3.9
