
[tool.poetry]
name = "narrow-down"
version = "0.1.0"
description = "Fast fuzzy text search"
authors = ["Christian Krudewig <chr1st1ank@krudewig-online.de>"]

readme = "README.md"
homepage = "https://github.com/chr1st1ank/narrow-down"
repository = "https://github.com/chr1st1ank/narrow-down"
documentation = "https://narrow-down.readthedocs.io"
keywords = ["narrow-down"]
classifiers=[
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    
    "License :: OSI Approved :: Apache Software License",
    
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]


[tool.poetry.urls]
"Bug Tracker" = "https://github.com/chr1st1ank/narrow-down/issues"

[tool.poetry.dependencies]
python = "<3.11,>=3.7"

[tool.poetry.dev-dependencies]
pre-commit = "^2.15.0"
invoke = "^1.6.0"
flake8 = "^4.0.1"
flakehell = "^0.9.0"
flake8-builtins = "^1.5.3"
flake8-blind-except = "^0.2.0"
flake8-logging-format = "^0.6.0"
flake8-bugbear = "^21.9.2"
flake8-annotations = "^2.6.2"
flake8-docstrings = "^1.6.0"
flake8-bandit = "^2.1.2"
darglint = "^1.8.0"
isort = "^5.9.3"
black = "^21.9b0"
safety = "^1.10.3"
mypy = "^0.930"
sphinx = "^4.2.0"
recommonmark = "^0.7.1"
bump2version = "^1.0.1"
pytest = "^6.2.5"
xdoctest = "^0.15.10"
coverage = {version = "^6.0.1", extras = ["toml"]}
pytest-cov = "^3.0.0"
watchdog = {version = "^2.1.6", extras = ["watchmedo"]}

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["narrow_down"]

[tool.coverage.report]
fail_under = 95
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug",
  "if settings.DEBUG:",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == __main__:",
  "def main"
]
show_missing = true

[tool.coverage.html]
directory = "htmlcov"

[tool.flakehell]
format = "grouped"
max_line_length = 100
show_source = true
docstring-convention = "google"
extended_default_ignore = []

[tool.flakehell.plugins]
pyflakes = ["+*"]
pycodestyle = ["+*"]
mccabe = ["+*"]
"flake8-*" = ["+*"]
darglint = ["+*"]

[tool.flakehell.exceptions."tests/"]
flake8-bandit = ["-S101"]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 100
known_third_party = ["invoke", "nox"]

[tool.black]
line-length = 100
target-version = ["py39"]
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pylint.master]
reports = false
msg-template = "{path}:{line}: {msg_id} ({symbol}) {msg} ({obj})"
load-plugins = [
    "pylint.extensions.docparams", # Find parameters missing in docstrings
    "pylint.extensions.docstyle", # Detect wrong docstring formatting
]
disable = [
    "bad-continuation", # Creates many false positives conflicting with black
    "invalid-name", # Creates warnings for local single-letter variables
    "fixme", # Creates warnings for todo items
    "no-else-return", # Creates refactor result for indented else block; which however might be more readable
    "duplicate-code", # Unfortunately this gives alerts also for identical function signatures
    "line-too-long", # Checked already by flake8
]

[tool.pylint.design]
max-args = 10  # Maximum number of arguments for functions
max-attributes = 15  # Maximum number of attributes for a class

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"